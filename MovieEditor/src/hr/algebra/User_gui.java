/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra;

import hr.algebra.utils.FileUtils;
import hr.algebra.utils.MessageUtils;
import hr.algebra.view.model.ActorEditPanel;
import hr.algebra.view.model.DirectorEditPanel;
import hr.algebra.view.model.MovieEditPanel;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.IOException;
import java.util.Arrays;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.ButtonGroup;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.text.DefaultEditorKit;

/**
 *
 * @author Jo
 */
public class User_gui extends javax.swing.JFrame {

    /**
     * Creates new form user
     */
    public User_gui() {
        initComponents();
        init();
        handleLookAndFeel();
        handleEditMenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpContent = new javax.swing.JTabbedPane();
        miMenu = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        miNew = new javax.swing.JMenuItem();
        miNewWindow = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        miOpen = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        miPageSetup = new javax.swing.JMenuItem();
        miPrint = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        miExit = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        menuView = new javax.swing.JMenu();
        menuLF = new javax.swing.JMenu();
        menuHelp = new javax.swing.JMenu();
        miAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        tpContent.setPreferredSize(new java.awt.Dimension(1192, 768));
        tpContent.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tpContentComponentShown(evt);
            }
        });
        getContentPane().add(tpContent);

        menuFile.setMnemonic('F');
        menuFile.setText("File");
        menuFile.setToolTipText("");

        miNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        miNew.setText("New File");
        menuFile.add(miNew);

        miNewWindow.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        miNewWindow.setText("New Window");
        miNewWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewWindowActionPerformed(evt);
            }
        });
        menuFile.add(miNewWindow);
        menuFile.add(jSeparator1);

        miOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        miOpen.setText("Open");
        miOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenActionPerformed(evt);
            }
        });
        menuFile.add(miOpen);
        menuFile.add(jSeparator3);

        miPageSetup.setText("Page setup");
        miPageSetup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPageSetupActionPerformed(evt);
            }
        });
        menuFile.add(miPageSetup);

        miPrint.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        miPrint.setText("Print");
        miPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPrintActionPerformed(evt);
            }
        });
        menuFile.add(miPrint);
        menuFile.add(jSeparator2);

        miExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        menuFile.add(miExit);

        miMenu.add(menuFile);

        menuEdit.setMnemonic('E');
        menuEdit.setText("Edit");
        menuEdit.setToolTipText("");
        miMenu.add(menuEdit);

        menuView.setMnemonic('V');
        menuView.setText("View");
        menuView.setToolTipText("");

        menuLF.setMnemonic('L');
        menuLF.setText("Look and Feel");
        menuLF.setToolTipText("");
        menuView.add(menuLF);

        miMenu.add(menuView);

        menuHelp.setMnemonic('H');
        menuHelp.setText("Help");
        menuHelp.setToolTipText("");

        miAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        miAbout.setText("About");
        miAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAboutActionPerformed(evt);
            }
        });
        menuHelp.add(miAbout);

        miMenu.add(menuHelp);

        setJMenuBar(miMenu);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tpContentComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tpContentComponentShown

    }//GEN-LAST:event_tpContentComponentShown

    private void miNewWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewWindowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_miNewWindowActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        if (MessageUtils.showConfirmDialog(
                "Delete movie",
                "Do you really want to exit?") == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_miExitActionPerformed

    private void miPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPrintActionPerformed
        PrinterJob job = PrinterJob.getPrinterJob();
        if (job.printDialog()) {
            try {
                job.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_miPrintActionPerformed

    private void miPageSetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPageSetupActionPerformed

        PrinterJob job = PrinterJob.getPrinterJob();
        PageFormat pageDialog = job.pageDialog(job.defaultPage());
        try {
            job.print();
        } catch (PrinterException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_miPageSetupActionPerformed

    private void miOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenActionPerformed
        try {
            Optional<String> s = FileUtils.loadTextFromFile();
        } catch (IOException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }    }//GEN-LAST:event_miOpenActionPerformed

    private void miAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAboutActionPerformed
        MessageUtils.showInformationMessage("About", "This is an app that let's you edit movie information.");
    }//GEN-LAST:event_miAboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User_gui().setVisible(true);
            }
        });
    }
    private static final String EDITMOVIE = "Edit Movie";
    private static final String EDITACTOR = "Edit Actor";
    private static final String EDITDIRECTOR = "Edit Director";

    private void init() {
        tpContent.add(EDITMOVIE, new MovieEditPanel());
        tpContent.add(EDITACTOR, new ActorEditPanel());
        tpContent.add(EDITDIRECTOR, new DirectorEditPanel());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenu menuLF;
    private javax.swing.JMenu menuView;
    private javax.swing.JMenuItem miAbout;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuBar miMenu;
    private javax.swing.JMenuItem miNew;
    private javax.swing.JMenuItem miNewWindow;
    private javax.swing.JMenuItem miOpen;
    private javax.swing.JMenuItem miPageSetup;
    private javax.swing.JMenuItem miPrint;
    private javax.swing.JTabbedPane tpContent;
    // End of variables declaration//GEN-END:variables

    private void handleEditMenu() {

        ActionMap actionMap = tpContent.getActionMap();
        JMenuItem mi = new JMenuItem();
        mi.setAction(actionMap.get(DefaultEditorKit.cutAction));
        mi.setText("Cut");
        mi.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_MASK));
        menuEdit.add(createMenuItem(
                actionMap.get(DefaultEditorKit.cutAction),
                "Cut",
                KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_MASK)
        ));
        menuEdit.add(createMenuItem(
                actionMap.get(DefaultEditorKit.copyAction),
                "Copy",
                KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_MASK)
        ));
        menuEdit.add(createMenuItem(
                actionMap.get(DefaultEditorKit.pasteAction),
                "Paste",
                KeyStroke.getKeyStroke(KeyEvent.VK_V, InputEvent.CTRL_MASK)
        ));

    }

    private void handleLookAndFeel() {
        ButtonGroup bg = new ButtonGroup();
        Arrays.asList(UIManager.getInstalledLookAndFeels()).forEach(info -> {
            JRadioButtonMenuItem mi = new JRadioButtonMenuItem(info.getName());
            menuLF.add(mi);
            bg.add(mi);
            mi.setSelected(info.getName().equals("Nimbus"));

            mi.addActionListener(e -> {

                try {
                    UIManager.setLookAndFeel(info.getClassName());
                    SwingUtilities.updateComponentTreeUI(User_gui.this);
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    {
                        Logger.getLogger(User_gui.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });

        });
    }

    private JMenuItem createMenuItem(Action action, String text, KeyStroke acc) {
        JMenuItem mi = new JMenuItem();
        mi.setAction(action);
        mi.setText(text);
        mi.setAccelerator(acc);
        return mi;
    }
}
