/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.view.model.admin;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Archive;
import hr.algebra.model.Movie;
import hr.algebra.parser.rss.MovieParser;
import hr.algebra.utils.IconUtils;
import hr.algebra.utils.JAXBUtils;
import hr.algebra.utils.MessageUtils;
import hr.algebra.view.model.table.MovieTableModel;
import java.awt.Dialog;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.Popup;
import javax.xml.bind.JAXBException;

/**
 *
 * @author Jo
 */
public class MovieEditPanelAdmin extends javax.swing.JPanel {

    private List<JLabel> labels;
    private Repository repository;
    private MovieTableModel movieTableModel;

    private static List<Movie> m;
    private static final String FILE = "archive.XML";

    /**
     * Creates new form MovieEditView
     */
    public MovieEditPanelAdmin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIcon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMovieTableAdmin = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnMovieAdminClear = new javax.swing.JButton();
        btnMovieAdminUpdate = new javax.swing.JButton();
        btnMovieAdminDelete = new javax.swing.JButton();
        lblErrorMovieDesc = new javax.swing.JLabel();
        lblErrorPubDate = new javax.swing.JLabel();
        lblErrorMovieTitle = new javax.swing.JLabel();
        lblErrorMovieOrigTitle = new javax.swing.JLabel();
        lblErrorMovieActors = new javax.swing.JLabel();
        lblErrorMovieDirector = new javax.swing.JLabel();
        lblErrorMovieDuration = new javax.swing.JLabel();
        lblErrorMovieGenre = new javax.swing.JLabel();
        lblErrorMovieIcon = new javax.swing.JLabel();
        lblErrorMoviePicturePath = new javax.swing.JLabel();
        lblPubDateAdminMovie = new javax.swing.JLabel();
        lblActorAdminMovie = new javax.swing.JLabel();
        lblOrigTitleAdminMovie = new javax.swing.JLabel();
        lblDirectorAdminMovie = new javax.swing.JLabel();
        lblPicPathMovieAdmin = new javax.swing.JLabel();
        lblTitleAdminMovie = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblDescAdminMovie = new javax.swing.JLabel();
        lblDurationAdminMovie = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblGenreAdminMovie = new javax.swing.JLabel();
        btnSaveXml = new javax.swing.JButton();

        setBackground(new java.awt.Color(230, 230, 249));
        setPreferredSize(new java.awt.Dimension(1192, 768));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        lblIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hr/assets/no_image.png"))); // NOI18N
        lblIcon.setRequestFocusEnabled(false);

        tbMovieTableAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbMovieTableAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbMovieTableAdminMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbMovieTableAdminMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbMovieTableAdmin);

        jLabel1.setText("Title:");

        jLabel2.setText("Published date:");

        jLabel4.setText("Original title:");

        jLabel5.setText("Duration:");

        jLabel6.setText("Genre:");

        jLabel7.setText("Actors:");

        jLabel8.setText("Director:");

        btnMovieAdminClear.setText("Clear Form");
        btnMovieAdminClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovieAdminClearActionPerformed(evt);
            }
        });

        btnMovieAdminUpdate.setText("Pull From Website");
        btnMovieAdminUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovieAdminUpdateActionPerformed(evt);
            }
        });

        btnMovieAdminDelete.setBackground(new java.awt.Color(255, 153, 153));
        btnMovieAdminDelete.setText("Delete All Data");
        btnMovieAdminDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovieAdminDeleteActionPerformed(evt);
            }
        });

        lblErrorMovieDesc.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorPubDate.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorMovieTitle.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorMovieOrigTitle.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorMovieActors.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorMovieDirector.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorMovieDuration.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorMovieGenre.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorMovieIcon.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorMoviePicturePath.setForeground(new java.awt.Color(255, 0, 51));

        lblPubDateAdminMovie.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblActorAdminMovie.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblOrigTitleAdminMovie.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblDirectorAdminMovie.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblPicPathMovieAdmin.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTitleAdminMovie.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setText("Description:");

        lblDescAdminMovie.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblDurationAdminMovie.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Picture path:");

        lblGenreAdminMovie.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSaveXml.setText("Save XML File");
        btnSaveXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveXmlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPicPathMovieAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblErrorMoviePicturePath)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSaveXml, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblErrorMovieIcon)
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblOrigTitleAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblActorAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblDirectorAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblTitleAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblDurationAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(119, 119, 119)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblErrorMovieTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblErrorMovieDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblErrorMovieOrigTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblErrorMovieActors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblErrorMovieDirector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblErrorMovieGenre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblErrorMovieDuration))
                                            .addComponent(lblErrorPubDate)))
                                    .addComponent(lblPubDateAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDescAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGenreAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnMovieAdminUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMovieAdminClear, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMovieAdminDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblErrorMovieTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(lblErrorPubDate)))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblDescAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblErrorMovieOrigTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblOrigTitleAdminMovie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblErrorMovieActors)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblActorAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblErrorMovieDirector)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblDirectorAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(lblErrorMovieGenre))
                                        .addComponent(lblErrorMovieDuration))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblDurationAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblErrorMovieDesc)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblErrorMovieIcon)
                                            .addComponent(lblTitleAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblPubDateAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(lblPicPathMovieAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGenreAdminMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblErrorMoviePicturePath))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMovieAdminUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMovieAdminClear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMovieAdminDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSaveXml, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void btnMovieAdminUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovieAdminUpdateActionPerformed

        try {
            List<Movie> movies = MovieParser.parse();
            repository.createList(movies);

            movieTableModel.setMovies(repository.selectList());

        } catch (Exception ex) {
            MessageUtils.showErrorMessage("Unrecoverable error", "Unable to upload movies");
            System.exit(1);
        }
    }//GEN-LAST:event_btnMovieAdminUpdateActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
         new Thread(() -> {
        init();
        }).start();
       
    }//GEN-LAST:event_formComponentShown
    private void returnInMain(){
           java.awt.EventQueue.invokeLater(new Runnable(){
               public void run(){
                  JOptionPane.showMessageDialog(null,
                    "Another thread!!");
               }
           
           });
           
           
    }
    
    private void btnMovieAdminClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovieAdminClearActionPerformed
        clearForm();
    }//GEN-LAST:event_btnMovieAdminClearActionPerformed

    private void tbMovieTableAdminMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMovieTableAdminMousePressed
        showMovie();
    }//GEN-LAST:event_tbMovieTableAdminMousePressed

    private void tbMovieTableAdminMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMovieTableAdminMouseReleased
        showMovie();    }//GEN-LAST:event_tbMovieTableAdminMouseReleased

    private void btnMovieAdminDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovieAdminDeleteActionPerformed
        if (MessageUtils.showConfirmDialog(
                "Delete movie",
                "Do you really want to delete movie?") == JOptionPane.YES_OPTION) {
            try {
                List<Movie> m = repository.selectList();
                for (Movie movie : m) {
                    Files.deleteIfExists(Paths.get(movie.getPicturePath()));
                }
                repository.deleteAll();

                movieTableModel.setMovies(repository.selectList());
                MessageUtils.showInformationMessage(" Success", "Youdeleted everything!");
            } catch (Exception ex) {
                Logger.getLogger(MovieEditPanelAdmin.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Unrecoverable error", "Unable to delete all data");

            }
        }
    }//GEN-LAST:event_btnMovieAdminDeleteActionPerformed

    private void btnSaveXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveXmlActionPerformed
        try {
                        m = repository.selectList();

            JAXBUtils.save(new Archive(m), FILE);
            MessageUtils.showInformationMessage("Success!", "List is written in a file!");
        } catch (JAXBException ex) {
            Logger.getLogger(MovieEditPanelAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(MovieEditPanelAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSaveXmlActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMovieAdminClear;
    private javax.swing.JButton btnMovieAdminDelete;
    private javax.swing.JButton btnMovieAdminUpdate;
    private javax.swing.JButton btnSaveXml;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblActorAdminMovie;
    private javax.swing.JLabel lblDescAdminMovie;
    private javax.swing.JLabel lblDirectorAdminMovie;
    private javax.swing.JLabel lblDurationAdminMovie;
    private javax.swing.JLabel lblErrorMovieActors;
    private javax.swing.JLabel lblErrorMovieDesc;
    private javax.swing.JLabel lblErrorMovieDirector;
    private javax.swing.JLabel lblErrorMovieDuration;
    private javax.swing.JLabel lblErrorMovieGenre;
    private javax.swing.JLabel lblErrorMovieIcon;
    private javax.swing.JLabel lblErrorMovieOrigTitle;
    private javax.swing.JLabel lblErrorMoviePicturePath;
    private javax.swing.JLabel lblErrorMovieTitle;
    private javax.swing.JLabel lblErrorPubDate;
    private javax.swing.JLabel lblGenreAdminMovie;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblOrigTitleAdminMovie;
    private javax.swing.JLabel lblPicPathMovieAdmin;
    private javax.swing.JLabel lblPubDateAdminMovie;
    private javax.swing.JLabel lblTitleAdminMovie;
    private javax.swing.JTable tbMovieTableAdmin;
    // End of variables declaration//GEN-END:variables

    private void init() {
      
        try {
           
            clearForm();
            initRepository();
            initTable();
             returnInMain();
        } catch (Exception ex) {
            Logger.getLogger(MovieEditPanelAdmin.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Unrecovarable", "Exiting");
            System.exit(1);
        }
          
    }

    private void clearForm() {
        labels = Arrays.asList(lblTitleAdminMovie, lblPubDateAdminMovie, lblDescAdminMovie, lblOrigTitleAdminMovie, lblActorAdminMovie, lblDirectorAdminMovie, lblDurationAdminMovie, lblGenreAdminMovie, lblPicPathMovieAdmin);
        labels.forEach((label) -> {
            label.setText("");
        });
    }

    private void showMovie() {
        int selectedRow = tbMovieTableAdmin.getSelectedRow();
        int rowIndex = tbMovieTableAdmin.convertRowIndexToModel(selectedRow);
        int selectedId = (int) movieTableModel.getValueAt(rowIndex, 0);

        try {
            Optional<Movie> opt = repository.selectOne(selectedId);

            if (opt.isPresent()) {
                fillform(opt.get());
            }
        } catch (Exception ex) {
            Logger.getLogger(MovieEditPanelAdmin.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unable to fetch movie");
        }
    }

    private void fillform(Movie movie) {
        lblTitleAdminMovie.setText(movie.getTitle());
        lblPubDateAdminMovie.setText(movie.getPubDate().format(Movie.DATE_FORMATTER));
        lblDescAdminMovie.setText(movie.getDescription());
        lblOrigTitleAdminMovie.setText(movie.getOrigiTitle());
        lblActorAdminMovie.setText(movie.getActors().toString());
        lblDirectorAdminMovie.setText(movie.getDirector().toString());
        lblDurationAdminMovie.setText(String.valueOf(movie.getDuration()));
        lblGenreAdminMovie.setText(movie.getGenre());

        if (movie.getPicturePath() != null && Files.exists(Paths.get(movie.getPicturePath()))) {
            lblPicPathMovieAdmin.setText(movie.getPicturePath());
            setIcon(lblIcon, new File(movie.getPicturePath()));
        }

    }

    private void setIcon(JLabel label, File file) {
        try {
            label.setIcon(IconUtils.createIcon(file.getAbsolutePath(), label.getWidth(), label.getHeight()));
        } catch (IOException ex) {
            Logger.getLogger(MovieEditPanelAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initRepository() throws IOException {
        repository = RepositoryFactory.getMovieRepository();
    }

    private void initTable() throws Exception {
//        movieTableModel.fireTableDataChanged();
        tbMovieTableAdmin.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbMovieTableAdmin.setAutoCreateRowSorter(true);

        tbMovieTableAdmin.setRowHeight(25);

        try {
            movieTableModel = new MovieTableModel(repository.selectList());
            tbMovieTableAdmin.setModel(movieTableModel);
        } catch (Exception exception) {
            MessageUtils.showInformationMessage("No data in table", "NO DATA");
        }
    }

}
